# -*- coding: utf-8 -*-
"""tarea2.1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BRFOAtLufQQMx9cGdFQO6nOWSmUa3udS
"""

# Hacemos las importacion de la librería Pandas y mostramos el DataFrame
import pandas as pd
df = pd.read_csv("tarea2.1.csv")
dat = df
print(dat)

# Los graficos son una buena forma de poder ver como se comportan los datos
# Importar bibliotecas necesarias
import seaborn as sb

sb.scatterplot(x="Altura", y="Peso", data=dat, palette="coolwarm")

#Preparamos los datos para el entrenamiento
#Caracteristicas (X), etiqueta (y)
X = dat["Altura"]
y = dat["Peso"]

y

X_procesada = X.values.reshape(-1,1)
y_procesada = y.values.reshape(-1,1)

# Importamos el Modelo que usaremos de sklear, en este caso un modelo de regresión lineal, ya que buscamos un valor continuo
from sklearn.linear_model import LinearRegression

# Instanciamos el modelo
modelo = LinearRegression()

#Entrenamiento con los datos previamente transformados
modelo.fit(X_procesada, y_procesada)

#El modelo está listo para predecir valores

#ejemplo con un dato conocido previamente
Altura = 2.45
prediccion = modelo.predict([[Altura]])
print(f"{Altura} metros son {prediccion} kilos")

modelo.score(X_procesada, y_procesada) #con esto obtenemos el % de exactitud del modelo

# El modelo de regresión funciona bien porque existe una relación directa y predecible entre la altura y el peso en los datos de ejemplo:
# a medida que una persona es más alta, su peso aumenta en proporción constante. Los datos están ordenados y sin valores inusuales,
# por lo que el modelo puede aprender esta relación de manera clara y hacer predicciones precisas para alturas nuevas.
# Además, la baja diferencia entre los valores reales y los predichos (bajo error) confirma que el modelo es confiable en este caso.

# recreando el mismo ejercicio, esta vez, agregando al CSV con los datos, la edad de las personas

# Hacemos las importacion de la librería Pandas y mostramos el DataFrame
import pandas as pd
df = pd.read_csv("tarea-2.1.csv")
dt = df
print(dt)

X = dt[["Altura", "Edad"]]
y = dt["Peso"]

y

# Importamos el Modelo que usaremos de sklear, en este caso un modelo de regresión lineal, ya que buscamos un valor continuo
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Dividir los datos en conjunto de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear y entrenar el modelo de regresión lineal
modelo = LinearRegression()
modelo.fit(X_train, y_train)

# Realizar predicciones
y_pred = modelo.predict(X_test)

#El modelo está listo para predecir valores

#ejemplo con un dato conocido previamente
nueva_entrada = [[1.75, 32]]
pesopre = modelo.predict(nueva_entrada)
print("El peso para una altura de 1.90 m y 34 años de edad:", pesopre[0], "kg")

# El modelo de regresión lineal predice bien el peso usando altura y edad porque ambas variables
# tienen una relación directa con el peso, y su simplicidad permite hacer predicciones precisas y fáciles de interpretar.